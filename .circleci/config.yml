aliases:
  - &install_yarn_version
    name: Install specific Yarn version
    command: |
      curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.13.0
      echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV

  - &restore_yarn_cache
    name: Restore Yarn cache
    keys:
      - yarn-{{ .Branch }}-packages-{{ checksum "yarn.lock" }}

  - &save_yarn_cache
    name: Save Yarn cache
    key: yarn-{{ .Branch }}-packages-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

  - &run_yarn_install
    name: Install dependencies
    command: yarn install

node_v14: &node_v14
  working_directory: ~/search-insights
  docker:
    - image: cimg/node:14.17.6

version: 2
jobs:
  'build and size':
    <<: *node_v14
    steps:
      - checkout
      - run: *install_yarn_version
      - restore_cache: *restore_yarn_cache
      - run: *run_yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Build & Test packages size
          command: |
            yarn run build
            yarn run test:size

  lint:
    <<: *node_v14
    steps:
      - checkout
      - run: *install_yarn_version
      - restore_cache: *restore_yarn_cache
      - run: *run_yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Lint & Code styles
          command: yarn run lint
      - run:
          name: Type Checking
          command: yarn run test:type

  'unit tests':
    <<: *node_v14
    steps:
      - checkout
      - run: *install_yarn_version
      - restore_cache: *restore_yarn_cache
      - run:
          name: Remove Ship.js and install dependencies
          command: yarn remove shipjs && yarn install
      - run:
          name: Unit tests
          command: yarn run test

  'release if needed':
    <<: *node_v14
    steps:
      - checkout
      - run: *install_yarn_version
      - restore_cache: *restore_yarn_cache
      - run: *run_yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Trigger a release if the latest commit is a release commit
          command: |
            yarn shipjs trigger
  'prepare release':
    <<: *node_v14
    steps:
      - checkout
      - run: *install_yarn_version
      - restore_cache: *restore_yarn_cache
      - run: *run_yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Prepare release
          command: |
            git config --global user.email "algobot@users.noreply.github.com"
            git config --global user.name "algobot"
            yarn run release --yes --no-browse

workflows:
  version: 2
  ci:
    jobs:
      - build and size
      - unit tests
      - lint
      - 'release if needed':
          filters:
            branches:
              only:
                - master
  prepare_release_every_tuesday:
    triggers:
      - schedule:
          cron: '0 9 * * 2'
          filters:
            branches:
              only:
                - master
    jobs:
      - prepare release
